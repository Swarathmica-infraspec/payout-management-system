name: Payout Management System

on: [push, pull_request]

env:
  GO-VERSION: 1.25.0

jobs:
  setup:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO-VERSION }}
          cache-dependency-path: go.sum

  format:
    name: Check format
    runs-on: ubuntu-24.04
    needs: setup
    steps:
      - run: test -z "$(gofmt -l .)"

  lint:
    runs-on: ubuntu-24.04
    needs: format
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO-VERSION }}
          cache-dependency-path: go.sum
      - name: Run linter
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.4.0

  test:
    runs-on: ubuntu-24.04
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO-VERSION }}
          cache-dependency-path: go.sum
      - name: Download dependencies
        run: go mod download
      - name: Start all containers
        run: docker compose -f .devcontainer/docker-compose.yml up -d
      - name: Wait for database
        run: |
              until docker exec devcontainer-db-1 pg_isready -U postgres; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done

      - name: Create table Payee
        run: |
          docker cp payee/payee_db.sql devcontainer-db-1:/payee_db.sql
          docker exec devcontainer-db-1 psql -U postgres -d postgres -f /payee_db.sql
      - name: Run tests
        run: docker exec devcontainer-app-1 sh -c "cd /workspaces/payout-management-system && go test -v ./..."
